// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        kotlin_version = '1.9.20'

        libs = [
                viewpager2                : 'androidx.viewpager2:viewpager2:1.0.0',
                recyclerview              : 'androidx.recyclerview:recyclerview:1.2.1',
                legacy_support_v4         : 'androidx.legacy:legacy-support-v4:1.0.0',
                legacy_preference_v14     : 'androidx.legacy:legacy-preference-v14:1.0.0',
                appcompat                 : 'androidx.appcompat:appcompat:1.4.0-alpha03',
                annotation                : 'androidx.annotation:annotation:1.1.0',
                mediarouter               : 'androidx.mediarouter:mediarouter:1.2.0-alpha01',
                lifecycle_runtime         : 'androidx.lifecycle:lifecycle-runtime:2.4.0-alpha03',
                lifecycle_extensions      : 'androidx.lifecycle:lifecycle-extensions:2.2.0',
                palette                   : 'androidx.palette:palette:1.0.0',
                constraintlayout          : 'androidx.constraintlayout:constraintlayout:2.0.1',
                constraintlayout_solver   : 'androidx.constraintlayout:constraintlayout-solver:2.0.1',
                leanback                  : 'androidx.leanback:leanback:1.1.0-alpha04',
                slice_builders            : 'androidx.slice:slice-builders:1.1.0-alpha02',
                slice_core                : 'androidx.slice:slice-core:1.1.0-alpha02',
                slice_view                : 'androidx.slice:slice-view:1.1.0-alpha02',
                core_runtime              : 'androidx.arch.core:core-runtime:2.1.0',
                dynamicanimation          : 'androidx.dynamicanimation:dynamicanimation:1.1.0-alpha03',
                cardview                  : 'androidx.cardview:cardview:1.0.0',
                material                  : 'com.google.android.material:material:1.5.0-alpha02',
                protobuf_java             : 'com.google.protobuf:protobuf-java:3.5.1',
                protoc                    : 'com.google.protobuf:protoc:3.5.1',
                lottie                    : 'com.airbnb.android:lottie:3.6.0',

                core_ktx                  : 'androidx.core:core-ktx:1.3.1',
                kotlin_stdlib_jdk7        : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
                kotlinx_coroutines_android: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_version",
                kotlinx_coroutines_core   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_version",
                kotlin_reflect            : "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version",
        ]
    }

    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/jcenter'
        }
        maven {
            url 'https://maven.aliyun.com/repository/central'
        }
        maven {
            url 'https://maven.aliyun.com/repository/google'
        }
    }

    dependencies {
        classpath "com.android.tools.build:gradle:7.4.2"
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.17'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}



apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.5.1'
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.builtins {
                java {}
            }
        }
    }
}

android {
    compileSdkVersion COMPILE_SDK
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId "com.android.settings"
        minSdkVersion 29
        targetSdkVersion TARGET_SDK
        versionCode 31
        versionName "12"
    }

    signingConfigs {
        platform {
            storeFile file("keystore/platform.keystore")
            storePassword '123456'
            keyAlias 'platform'
            keyPassword '123456'
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            signingConfig signingConfigs.platform
        }

        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.platform
        }

        applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "Settings.apk"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            proto.srcDirs = ['protos']
            manifest.srcFile 'AndroidManifest.xml'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

//repositories {
//    flatDir {
//        dirs 'libs'
//    }
//}

dependencies {
    compileOnly files('libs/framework.jar')
    compileOnly files('libs/core-all.jar')
    compileOnly files('libs/telephony-common.jar')
    compileOnly files('libs/ims-common.jar')
    compileOnly files('libs/app-compat-annotations.jar')

    implementation files('libs/zxing-core-1.7.jar')
    implementation files('libs/android.hidl.base-V1.0-java.jar')
    implementation files('libs/android.hardware.dumpstate-V1.0-java.jar')
    implementation files('libs/android.hardware.dumpstate-V1.1-java.jar')
    implementation files('libs/settings-logtags.jar')
    implementation files('libs/statslog-settings.jar')
    implementation files('libs/guava.jar') // (include jsr305.jar)

    implementation project(':WifiTrackerLib')
    implementation project(':setupcompat')
    implementation project(':setupdesign')
    implementation project(':iconloaderlib')
    implementation project(':SettingsLib')
    implementation project(':SettingsLib:ActionBarShadow')
    implementation project(':SettingsLib:RestrictedLockUtils')
    implementation project(':SettingsLib:ActionButtonsPreference')
    implementation project(':SettingsLib:HelpUtils')
    implementation project(':SettingsLib:SettingsSpinner')
    implementation project(':SettingsLib:Tile')
    implementation project(':SettingsLib:LayoutPreference')
    implementation project(':SettingsLib:AppPreference')
    implementation project(':SettingsLib:RadioButtonPreference')
    implementation project(':SettingsLib:search')
    implementation project(':SettingsLib:SearchWidget')
    implementation project(':SettingsLib:EntityHeaderWidgets')
    implementation project(':SettingsLib:AdaptiveIcon')
    implementation project(':SettingsLib:DisplayDensityUtils')

    implementation files("${rootDir.path}/libs/contextualcards.aar")
    implementation files("${rootDir.path}/libs/preference-1.2.0-alpha01.aar")

    implementation libs.appcompat
    implementation libs.recyclerview
    implementation libs.slice_builders
    implementation libs.slice_core
    implementation libs.slice_view
    implementation libs.constraintlayout
    implementation libs.cardview
    implementation libs.material
    implementation libs.lifecycle_runtime
    implementation libs.lifecycle_extensions
    implementation libs.protobuf_java
    implementation libs.protoc
}

allprojects {
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/jcenter'
        }
        maven {
            url 'https://maven.aliyun.com/repository/central'
        }
        maven {
            url 'https://maven.aliyun.com/repository/google'
        }
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            if (options.bootstrapClasspath != null) {
                Set<File> fileSet = options.bootstrapClasspath.getFiles()
                List<File> newFileList = new ArrayList<>();
                newFileList.add(new File("./libs/framework.jar"))
                newFileList.add(new File("./libs/core-all.jar"))
                newFileList.addAll(fileSet)
                options.bootstrapClasspath = files(
                        newFileList.toArray()
                )
            }
        }
    }
}
